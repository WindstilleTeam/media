Matze:

While I don't really care about class and variable naming as long as it's consistent. I'd like to not have to put curly braces on an own line and indent them separately (I don't know if vim supports that and other IDEs will shoke on it probably as well). I'd propose a more java like indenting of braces (with 4 space or tab indentation):

{{{
void
ClassName::do_stuff_method(int blup)
{
    int a = 20;

    // the following will do an insanely complicated calculation
    for(int i = 0; i < (a + 3); ++i) {
        std::cout << i * a << "\n";

        // don't forget to skip some elements
        if(!i)
             continue;

        switch(a) {
            case 5:
                std::cout << "5";
                break;
            case 6:
            default:
                break;
        }
    }
}
}}}

For the emacs users this would be similar to this I think:
{{{
(defconst my-c-style
       '((c-tab-always-indent        . t)
         (c-basic-offset . 4)
         (c-comment-only-line-offset . 4)
         ;; (c-hanging-braces-alist     . ((defun-open after)))
         (c-hanging-colons-alist     . ((member-init-intro before)
                                        (inher-intro)
                                        (case-label after)
                                        (label after)
                                        (access-label after)))
         (c-cleanup-list             . (brace-else-brace
                                        brace-elseif-brace
                                        scope-operator
                                        empty-defun-braces
                                        defun-close-semi))
         (c-offsets-alist            . ((arglist-close . c-lineup-arglist)
                                        (substatement-open . 0)
                                        (case-label        . +)
                                        (block-open        . 0)
                                        (inline-open       . 0)
                                        (inline-close      . 0)
                                        (comment-intro     . 0)
                                        (topmost-intro     . 0)
                                        (knr-argdecl-intro . -)))
         (c-echo-syntactic-information-p . t))
       "My C Programming Style")
}}}