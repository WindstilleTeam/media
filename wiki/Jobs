== Tasks ==

The following tasks are available, make sure you check with [irc://irc.freenode.net/#windstille] IRC Channel first to make sure that those tasks are not yet compeleted or picked up by somebody else, since those task lists always tend to get outdated quickly.

As always with [[wikipedia:Free Software|Free Software]] game projects, no payment, all for fun, reputation and experience.

=== Blender ===

* rig the powersuit-character and the powersuit-less characters properly (data/blender/hero.blend)
* create proper animations for walk, run, jump, duck, turn-around, aim and shoot, simple sloppy test animation would for the beginning be enough, just to figure out the movement and timing
* make sure all animations are exported and available in the game
* discuss what sort of bad guys will be needed and create models for them
* you will move between levels in a transport ship, this requires a model (or maybe a 2D based sprite instead?) - this needs to be discussed and made
* animations for going stairs up and down, [http://pingus.seul.org/~grumbel/tmp/windstille-stairs-2005-07-17.png stairs look like this]

=== Tilemap editor ===

* we need to use Flexlay to create some tilemaps. Join the IRC channel if interested

=== Sound ===

* We have noone at all currently doing sound effects. If you want to do this, please get in contact
* Voice acting. We have probably quite a few male volunteers for voice acting, but possibly not many female volunteers. However, we cannot start organising this until later in the development process, because dialog has yet to be written, let alone finalized
* Wansti is making some music. If you want to write music too, join the IRC channel and coordinate as to what is and isn't already being done, etc

=== Major features the game engine is still missing ===

* Jumping and grabbing on to things, climbing on to platforms
* Firing weapons
* Fist fights

=== Various bit-sized C++ tasks that require no particular knowledge ===

* fix bugs - you can find some in the [http://svn.berlios.de/viewcvs/windstille/trunk/BUGS?view=markup SVN BUGS file]
* integrate all available animations
* boxes or other items that you can push and pull
* initialising/loading/saving script variables (this is already being worked on by JamesG and MazteB)
* implement stairs, see blender task list above
* implement an elevator a platform onto which one can step on and once one presses 'use' it moves up or down, if 'use' is pressed while its moving it should inverse the direction
* change the console so that each expression that returns a value automatically prints it
* implement the currently unimplemneted function in the particle system
* change the Sprite3DDrawingRequest so that it does *not* make any use of the Sprite3D class itself (sprite3d::Data should be ok), because this causes throuble if you want to draw a sprite3d twice with different parameters
* implement some form of particle/spring system so that you could attach a lamp to it or something like that
* add layer support to particles, so that you can have particles on the light layer
* we need a way to define objects in scripting language, nothing complicated, just so that when you want a lamp you don't have to specify its light/color/highlight layers over and over again seperatly
* add Origin support to Sprite (much easier to say 'center' instead of (-32, -32))
* add support for resolutions other than 800x600, for the scenario itsef it simply means to change the scaling, but fonts and such could require some more clever way to scale so that they don't get blurry
* implement load on-demand (ie. load everything the sector needed at start of the sector) for TileFactor
* Blender Sprite3D exporter seems to have throuble with the Yagor, body gets messed up, when head and body are joined on the other side everything looks ok
* implement screenshot support
* save configuration changes only on request (probally via option menu), not at default on game quit (ie. to avoid switch to fullscreen -> find out that fullscreen doesn't work -> quit game -> stuck with game in unworking fullscreen mode)
* add ability to use different textures in 3d sprite to skin somebody with different cloth, show damage or such
* find out what broke the animation in latest SVN, either the .blend file itself got broken, the exporter (since it got restructed by Grumbel) or something else

=== Pretty OpenGL effects ===

* firing weapons - machine gun, flamethrower, etc
* implement water that has waves
* add a player-holding-torch lighting effect
* write a GameObject/Entity that simulates a 'laser display' or however you call things like [http://www.laserist.org/Laserist/2003Awards/LFI_Static_Cubi%20Bubi_B.jpg this], ie. something that uses a laser to project a 2d vector object on a wall, color of the laser should be configurable
* remove the players light sprite and replace it with a scripted entity, something analog to the fire-particle effect that attaches to the player
* fix nightvision to handle highlights correctly
* implement moths or other little insects that fly around street lamps or other things

=== Random tasks ===

* write a Squirrel-mode for Emacs
* bring all include file guards into the form of (except those of seperate libraries like lisp/ and squirrel/):
 #ifndef HEADER_{SUBDIR}_{FILENAME}_HPP
 #define HEADER_{SUBDIR}_{FILENAME}_HPP

=== Editor (written in Ruby) ===

* update it so that it can handle current file format completly and let it be tolerant to tags he doesn't know yet
* add handling of unknown GameObjects (stuff their sexpr into a object and write it out on save)
* added a tile editor that allows to edit the tile definition file
* find out what broke redo/undo
* write a .sprite file parser in ruby
* integrate the color picker component with GenericDialog

=== Into the future: ===

* face animation via morph targets to be used in dialogs, by no means important for the GotM run, just something Grumbel would like to have one day